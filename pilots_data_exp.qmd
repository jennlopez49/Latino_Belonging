---
title: "Survey Pilot Data"
format: pdf
editor: visual
execute:
  echo: false
  message: false
  warning: false
  fig-width: 6
  fig-height: 4
  dpi: 300
---

## Survey Pilot 1 & 2

```{r}
library(tidyverse)
library(dplyr)
library(broom)
library(patchwork)
library(Hmisc)
library(GGally)
library(glue)

pilot1 <- read.csv("pilot_1_clean.csv")
pilot2 <- read.csv("pilot_2_clean.csv")

both_pilots <- bind_rows(pilot1, pilot2)
both_pilots <- both_pilots %>% filter(!is.na(AttentionCheck2))
```

#Average, Min, Max Durations (in minutes) of Pilot 1:

```{r}
pilot1 <- pilot1 %>% filter(!is.na(AttentionCheck2))
mean(pilot1$Duration_Minutes)
min(pilot1$Duration_Minutes)
max(pilot1$Duration_Minutes)
```

#Average, Min, Max Durations (in minutes) of Pilot 2:

-   A respondent took a break and came back to finish the survey (started on the 6th, finished on the 7th), was excluded from these.

```{r}
pilot2 <- pilot2 %>% filter(!is.na(AttentionCheck2))
mean(pilot2$Duration_Minutes[pilot2$Duration_Minutes < 40])
min(pilot2$Duration_Minutes[pilot2$Duration_Minutes < 40])
max(pilot2$Duration_Minutes[pilot2$Duration_Minutes < 40])
```

```{r}
# immstate <- read.csv("/Users/jenniferlopez/Desktop/COIi work/State_Laws/states_287g_sums.csv")
# 
# # adding state abbvs
# pilot1 <- pilot1 %>% mutate(State_Abb = state.abb[match(State, state.name)]) 
# pilot2 <- pilot2 %>% mutate(State_Abb = state.abb[match(State, state.name)]) 
# 
# # imm state measures
# 
# pilot1 <- pilot1 %>% left_join(immstate, by = c("State_Abb" = "State"))
# pilot2 <- pilot2 %>% left_join(immstate, by = c("State_Abb" = "State"))
```

# Descriptives --- Emotions & Stigma Measures 

Emotions were 0 (none at all) - 10 (a lot) 

Stigma measures:

*Statements matrix - immigrants or Latinos, shown both matrices* 

Reverse coded: 1 (strongly disagree) - 5 (strongly agree), higher numbers --> more stigma

1. "Most residents of my state believe that immigrants (Latinos) are a major source of crime."
2. "Politicians in my state often talk negatively about immigrants (Latinos)."
3. "State-level policies in my state treat immigrants (Latinos) unfairly."

*Questions on Hypothetical Policy* 

Affecting each community, reverse-coded 1 (positively affect) to 5 (negatively affect):

1. To what extent do you think this proposed policy would affect the
Latino/Hispanic community? (*HypAffectLatino_Community*)

2. To what extent do you think this proposed policy would affect the immigrant community? (*HypAffectImm_Community*)

Affecting them personally, coded 1 (no, same amount) to 4 (yes, much more)

3. If this policy were passed, do you think you would experience more discrimination because of your ethnicity, immigration status, or accent? (*HypPersonallyAffect*)

Likelihood of Hypothetical Policy - coded 1 (not at all likely) to 5 (very likely)

4. How likely do you think that the proposed policy would be enacted in your state? (*HypPolicy_Likely*)

Support Hypothetical Policy - coded 1 (strongly oppose) to 5 (strongly support)

5. Do you support or oppose the proposed policy in your state? (*HypPolicy_Attitudes*)

*Group Discrimination Perceptions* Coded - 1 (none) to 4 (a lot):

1. How much discrimination is there in the United States today against immigrants?(*GroupDiscImms_Perc*)
2. How much discrimination is there in the United States today against Hispanics?Latinos? (*GroupDiscLatinos_Perc*) 


```{r}
# desc.summary <- both_pilots %>% filter(!is.na(TreatmentCondition)) %>%
#   group_by(TreatmentCondition) %>%
#   summarise(
#     mean_relief = mean(Relief, na.rm = TRUE),
#     mean_anger = mean(Anger, na.rm = TRUE),
#     mean_pride = mean(Pride, na.rm = TRUE),
#     mean_joy = mean(Joy, na.rm = TRUE),
#     mean_fear = mean(Fear, na.rm = TRUE),
#     mean_shame = mean(Shame, na.rm = TRUE),
#     mean_HypAffectLatino = mean(HypAffectLatino_Community, na.rm = TRUE),
#     mean_HypAffectImms = mean(HypAffectImm_Community, na.rm = TRUE),
#     mean_HypPersonally = mean(HypPersonallyAffect, na.rm = TRUE),
#     mean_HypLikely = mean(HypPolicy_Likely, na.rm = TRUE),
#     mean_HypAttiude = mean(HypPolicy_Attitudes, na.rm = TRUE),
#     mean_GroupDiscImms = mean(GroupDiscImms_Perc, na.rm = TRUE),
#     mean_GroupDiscLat = mean(GroupDiscLatinos_Perc, na.rm = TRUE),
#     mean_ImmCrime = mean(ImmsMajSourceCrime, na.rm = TRUE),
#     mean_ImmPoliticansNeg = mean(PoliticiansTalkNegImm, na.rm = TRUE),
#     mean_ImmPoliciesUnfair = mean(PoliciesImmUnfair, na.rm = TRUE),
#     mean_LatCrime = mean(LatinosMajSourceCrime, na.rm = TRUE),
#     mean_LatPoliticansNeg = mean(PoliticiansTalkNegLatinos, na.rm = TRUE),
#     mean_LatPoliciesUnfair = mean(PoliciesLatinosUnfair, na.rm = TRUE),
#     n = n()
#   )
# desc.summary[1:21]
# 
# vars <- c("HypAffectLatino_Community", "HypAffectImm_Community", "HypPersonallyAffect",
#           "HypPolicy_Likely", "HypPolicy_Attitudes",
#           "GroupDiscImms_Perc", "GroupDiscLatinos_Perc",
#           "ImmsMajSourceCrime", "PoliticiansTalkNegImm", "PoliciesImmUnfair",
#           "LatinosMajSourceCrime", "PoliticiansTalkNegLatinos", "PoliciesLatinosUnfair")
# 
# n_var <- both_pilots %>%
#   filter(!is.na(TreatmentCondition)) %>%
#   nrow()
# 
# for (var in vars) {
#   n_var <- both_pilots %>%
#     filter(!is.na(TreatmentCondition), !is.na(.data[[var]])) %>%
#     nrow()
#   
#   cat("\n\n=== Response counts for:", var, ", total n =", n_var)
#   
#   print(
#     both_pilots %>%
#       filter(!is.na(TreatmentCondition), !is.na(.data[[var]])) %>%
#       group_by(TreatmentCondition, Response = .data[[var]]) %>%
#       count(name = "n") %>%
#       arrange(TreatmentCondition, Response)
#   )
# }
```

# Treatments & Manipulation Check --- What did you just read about?

Control Policy - Consider the following policy proposal that could be implemented in your state: A recent policy proposal in your state would create a working group to analyze whether the current state flower should be kept, or whether other native flowers should be designated as the state flower. The proposed working group would invite high school students and those who work in botanical gardens to conduct research on native flowers and submit proposals on their recommendations for the state flower designation.

Treatment (Pro-Immigrant) - Consider the following policy proposal that could be implemented in your state: A recent policy proposal in your state would remove the requirement for hospitals to ask their patients about their immigration status. Opponents argue that the policy is necessary to track what is being spent providing undocumented immigrants with medical care. Supporters argue that it would encourage immigrants to seek medical care, and that the policy will help people access public services.

Treatment (Anti-immigrant) - Consider the following policy proposal that could be implemented in your state: This policy proposal would require hospitals to ask their patients about their immigration status. Supporters argue that the policy is necessary to track what is being spent to provide unauthorized immigrants with medical care to prevent them from "cheating the system." Opponents argue that it would discourage immigrants from seeking medical care, and that the policy is an attempt to scare people into not using public services.

*For the question - what did you just read about?*

0 - Chose "None of these," "Gun Control," or had a mismatch (ex. chose State Symbols and was not in the control group) 

1 - Was in the Control Group and Chose "State Symbols"

2 - Was in either of the Hypothetical Policy Treatment Groups and Chose "Immigration"

3 - Was in either of the Hypothetical Policy Treatment Groups and Chose "Healthcare"

```{r}
ggplot(both_pilots, aes(x = factor(ManipCheck_Verif), fill = TreatmentCondition)) +
  geom_bar(position = "dodge") +
  scale_fill_brewer(palette = "Set2") +
  labs(
    title = "Distribution of Manipulation Check Answers by Treatment Group",
    x = "Manipulation Check (Both Pilots)",
    y = "Count"
  ) +
  theme_minimal()
```

Would it affect immigrant / latino community / you ?

```{r}
immcommaffect <- ggplot(both_pilots, aes(x = TreatmentCondition, y = HypAffectImm_Community, 
                                         fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Immigrant Community Affected by Treatment", y = "Immigrant Community would be affected by Hyp Policy") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")
immcommaffect

latcommaffect <- ggplot(both_pilots, aes(x = TreatmentCondition, y = HypAffectLatino_Community, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Latino Community Affected by Treatment", y = "Latino Community would be affected by Hyp Policy") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")
latcommaffect
persaffect <- ggplot(both_pilots, aes(x = TreatmentCondition, y = HypPersonallyAffect, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Personally Affected, by Treatment", y = "Personally would be affected by Hyp Policy") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")
persaffect
```

How likely & would you support this policy?

```{r}
ggplot(both_pilots, aes(x = TreatmentCondition, y = HypPolicy_Likely, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Policy Likely by Treatment", y = "Likelihood of Hyp Policy") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")

ggplot(both_pilots, aes(x = TreatmentCondition, y = HypPolicy_Attitudes, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Would Support Policy by Treatment", y = "Attitudes on Hyp Policy") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")

```

# Emotions & Stigma Measures Post-Treatment by Treatment Group

```{r}
anger <- ggplot(both_pilots, aes(x = TreatmentCondition, y = Anger, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Reported Anger by Treatment", y = "Anger") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")
joy <- ggplot(both_pilots, aes(x = TreatmentCondition, y = Joy, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Reported Joy by Treatment", y = "Joy") +
  scale_fill_brewer(palette = "Set3") +
  theme_minimal() + theme(legend.position = "none")

pride <- ggplot(both_pilots, aes(x = TreatmentCondition, y = Pride, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Reported Pride by Treatment", y = "Pride") +
  scale_fill_brewer(palette = "Set3") +
  theme_minimal() + theme(legend.position = "none")

fear <- ggplot(both_pilots, aes(x = TreatmentCondition, y = Fear, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Reported Fear by Treatment", y = "Fear") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")

relief <- ggplot(both_pilots, aes(x = TreatmentCondition, y = Relief, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Reported Relief by Treatment", y = "Relief") +
  scale_fill_brewer(palette = "Set3") +
  theme_minimal() + theme(legend.position = "none")

shame <- ggplot(both_pilots, aes(x = TreatmentCondition, y = Shame, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Reported Shame by Treatment", y = "Shame") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")

# positive
pride
joy
relief

# negative
fear
shame
anger

```

Stigma Measures (Imm Stigma Matrix & Latino Stigma Matrix)

```{r}
immcrime<- ggplot(both_pilots, aes(x = TreatmentCondition, y = ImmsMajSourceCrime, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Reported Stigma (1) by Treatment", y = "Immigrants as Major Source of Crime") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")

polimms <- ggplot(both_pilots, aes(x = TreatmentCondition, y = PoliticiansTalkNegImm, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Reported Stigma (2) by Treatment", y = "Politicians Talk Negatively of Immigrants") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")

immpoliciesunfair <- ggplot(both_pilots, aes(x = TreatmentCondition, y = PoliciesImmUnfair, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Reported Stigma (3) by Treatment", y = "Policies are unfair against Immigrants") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")


latcrime<- ggplot(both_pilots, aes(x = TreatmentCondition, y = LatinosMajSourceCrime, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Reported Stigma (1) by Treatment", y = "Latinos as Major Source of Crime") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")

polilat <- ggplot(both_pilots, aes(x = TreatmentCondition, y = PoliticiansTalkNegLatinos, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Reported Stigma (2) by Treatment", y = "Politicians Talk Negatively of Latinos") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")

latpoliciesunfair <- ggplot(both_pilots, aes(x = TreatmentCondition, y = PoliciesLatinosUnfair, fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Reported Stigma (3) by Treatment", y = "Policies are unfair against Latinos") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")

## immigrant Stigma:
immcrime
polimms
immpoliciesunfair

## Latino Stigma:

latcrime
polilat
latpoliciesunfair

```

Checked whether the items are reliable (they are - immigrant stigma items cronbach alpha is at .8, Latino stigma is at .76)

```{r}
# stigma_imm_vars <- both_pilots %>%
#   dplyr::select(ImmsMajSourceCrime, PoliticiansTalkNegImm, PoliciesImmUnfair)
# 
# stigma_latino_vars <- both_pilots %>%
#  dplyr::select(LatinosMajSourceCrime, PoliticiansTalkNegLatinos, PoliciesLatinosUnfair)
# 
# # Correlation matrix #
# 
# cor(stigma_imm_vars, use = "pairwise.complete.obs")
# cor(stigma_latino_vars, use = "pairwise.complete.obs")
# 
# # Cronbach's alpha (internal consistency)
# psych::alpha(stigma_imm_vars)
# psych::alpha(stigma_latino_vars)
```

Visualization of the Index:

```{r}
both_pilots <- both_pilots %>% mutate(
  Stigma_Imm_Index = ImmsMajSourceCrime + PoliticiansTalkNegImm + PoliciesImmUnfair,
  Stigma_Latinos_Index = LatinosMajSourceCrime + PoliticiansTalkNegLatinos + PoliciesLatinosUnfair)


immstigma_plot <- ggplot(both_pilots, aes(x = TreatmentCondition, y = Stigma_Imm_Index, 
                                          fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Immigrant Stigma Index by Treatment", y = "Stigma Index -- Immigrants") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")
latstigma_plot <- ggplot(both_pilots, aes(x = TreatmentCondition, y = Stigma_Latinos_Index, 
                                          fill = TreatmentCondition)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Latino Stigma Index by Treatment", y = "Stigma Index -- Latinos") +
  scale_fill_brewer(palette = "Set2") +
  theme_minimal() + theme(legend.position = "none")

immstigma_plot

latstigma_plot

```

# Estimating effect sizes -- Emotions & Stigma Measures

#anova

Emotions -

```{r, echo = TRUE}
summary(aov(Relief ~ TreatmentCondition, data = both_pilots))
summary(aov(Anger ~ TreatmentCondition, data = both_pilots))
summary(aov(Shame ~ TreatmentCondition, data = both_pilots))
summary(aov(Fear ~ TreatmentCondition, data = both_pilots))
summary(aov(Pride ~ TreatmentCondition, data = both_pilots))
summary(aov(Joy ~ TreatmentCondition, data = both_pilots))
```

Stigma measures -

```{r, echo = TRUE}
summary(aov(ImmsMajSourceCrime ~ TreatmentCondition, data = both_pilots))
summary(aov(PoliticiansTalkNegImm ~ TreatmentCondition, data = both_pilots))
summary(aov(PoliciesImmUnfair ~ TreatmentCondition, data = both_pilots))
summary(aov(LatinosMajSourceCrime ~ TreatmentCondition, data = both_pilots))
summary(aov(PoliticiansTalkNegLatinos ~ TreatmentCondition, data = both_pilots))
summary(aov(PoliciesLatinosUnfair ~ TreatmentCondition, data = both_pilots))
summary(aov(Stigma_Imm_Index ~ TreatmentCondition, data = both_pilots))
summary(aov(Stigma_Latinos_Index ~ TreatmentCondition, data = both_pilots))

## alternate --- perceptions of group discrimination against immigrants / latinos 
summary(aov(GroupDiscImms_Perc ~ TreatmentCondition, data = both_pilots))
summary(aov(GroupDiscLatinos_Perc ~ TreatmentCondition, data = both_pilots))
```


## Some preliminary regressions to make sure its the anti-immigrant treatment moving --

```{r, echo = FALSE}
library(stargazer)
both_pilots <- both_pilots %>% mutate(
  Age = 2025 - Birth.Year,
  ParticipationVers = case_when(ParticipationVersion == "Post-Treatment_PolPart" ~ "No Cue",
                                ParticipationVersion == "PolParticipationVers2" ~ "Latino Issue Cue"),
  Educ = case_when(Education == "High school diploma or GED" ~ 1,
                   Education == "Some college, but no degree" ~ 2,
                   Education == "Associates or technical degree" ~ 3,
                   Education == "Bachelor’s degree" ~ 4,
                   Education == "Graduate or professional degree (MA, MS, MBA, PhD, JD, MD, DDS etc.)" ~ 5,
                   Education == "Prefer not to say" ~ NA),
  Group = case_when(TreatmentCondition == "Control_Policy" ~ "Control",
                        TreatmentCondition == "Treatment-Hypothetical_Pro" ~ "Pro",
                        TreatmentCondition == "Treatment-Hypothetical_Anti" ~ "Anti"),
  Group = as.factor(Group)
)
both_pilots$Group <- relevel(both_pilots$Group, ref = "Control")

model_anger <- lm(Anger ~ Group + Party + SkinTone + Sex_Gender + Age + 
                    Educ + Income, data = both_pilots)

#summary(model_anger)

# model_fear <- lm(Fear ~ TreatmentCondition + Party + SkinTone + Sex_Gender + Age + 
#                     Educ + Income, data = both_pilots)
# 
# #summary(model_fear)
# 
# model_shame<- lm(Shame ~ TreatmentCondition + Party + SkinTone + Sex_Gender + Age + 
#                     Educ + Income, data = both_pilots)

stargazer(model_anger, type = "text", header = FALSE)

#summary(model_shame)
# 
# model_pride <- lm(Pride ~ TreatmentCondition + Party + SkinTone + Sex_Gender + Age + 
#                     Education + Income, data = both_pilots)
# 
# summary(model_pride)
# 
# model_joy <- lm(Joy ~ TreatmentCondition + Party + SkinTone + Sex_Gender + Age + 
#                     Education + Income, data = both_pilots)
# 
# summary(model_joy)
# 
# model_relief <- lm(Relief ~ TreatmentCondition + Party + SkinTone + Sex_Gender + Age + 
#                     Education + Income, data = both_pilots)
# 
# summary(model_relief)

```

## Comparing means estimate effect sizes (cohen's d) using pwr package (control vs anti / pro),
using preliminary regressions for cohen's f & calculating sample size for 80% power based on effect size -- 

```{r}

library(pwr)

emotion_effect_analysis <- function(data, emotion_vars, predictors, treatment_var = "TreatmentCondition", control_label = "Control_Policy",
                                    anti_label = "Treatment-Hypothetical_Anti", pro_label = "Treatment-Hypothetical_Pro",
                                    sig.level = 0.05, target_power = 0.80) {
  
  results <- data.frame(
    Emotion = character(),
    Mean_Control = numeric(),
    Mean_Anti = numeric(),
    Mean_Pro = numeric(),
    D_Anti = numeric(),
    D_Pro = numeric(),
    R2 = numeric(),
    f2 = numeric(),
    Power = numeric(),
    Needed_N_for_80 = numeric(),
    stringsAsFactors = FALSE
  )
  
  for (emotion in emotion_vars) {
    # groups
    control <- subset(data, data[[treatment_var]] == control_label)
    anti <- subset(data, data[[treatment_var]] == anti_label)
    pro <- subset(data, data[[treatment_var]] == pro_label)
    
    # mean & sds
    m_ctrl <- mean(control[[emotion]], na.rm = TRUE)
    m_anti <- mean(anti[[emotion]], na.rm = TRUE)
    m_pro  <- mean(pro[[emotion]], na.rm = TRUE)
    
    sd_ctrl <- sd(control[[emotion]], na.rm = TRUE)
    sd_anti <- sd(anti[[emotion]], na.rm = TRUE)
    sd_pro  <- sd(pro[[emotion]], na.rm = TRUE)
    
    # pooled d 
    sd_pooled_anti <- sqrt((sd_ctrl^2 + sd_anti^2) / 2)
    sd_pooled_pro  <- sqrt((sd_ctrl^2 + sd_pro^2) / 2)
    
    # calc Cohen's d
    d_anti <- (m_anti - m_ctrl) / sd_pooled_anti
    d_pro  <- (m_pro - m_ctrl) / sd_pooled_pro
    
    # Full regression model
    formula <- as.formula(paste(emotion, "~", paste(predictors, collapse = " + ")))
    model <- lm(formula, data = data)
    
    r2 <- summary(model)$r.squared
    f2 <- ifelse(r2 < 1, r2 / (1 - r2), NA) 
    
    # calculating power
    u <- length(coef(model)) - 1
    v <- df.residual(model)
    n <- u + v + 1
    
    power_val <- tryCatch({
      pwr.f2.test(u = u, v = v, f2 = f2, sig.level = sig.level)$power
    }, error = function(e) NA)
    
    needed_n <- tryCatch({
      needed_v <- pwr.f2.test(u = u, f2 = f2, sig.level = sig.level, power = target_power)$v
      u + needed_v + 1
    }, error = function(e) NA)
    
    # store
    results <- rbind(results, data.frame(
      Emotion = emotion,
      Mean_Control = round(m_ctrl, 2),
      Mean_Anti = round(m_anti, 2),
      Mean_Pro = round(m_pro, 2),
      D_Anti = round(d_anti, 3),
      D_Pro = round(d_pro, 3),
      R2 = round(r2, 3),
      f2 = round(f2, 3),
      Power = round(power_val, 3),
      Needed_N_for_80 = round(needed_n, 0)
    ))
  }
  
  return(results)
}


# Your emotion outcome variables
emotions <- c("Anger", "Fear", "Shame", "Pride", "Relief", "Joy")

# Your predictor variables (from your model)
predictors <- c("TreatmentCondition", "Party", "SkinTone", "Sex_Gender", "Age", "Education", "Income")

# Run the analysis
effect_table <- emotion_effect_analysis(data = both_pilots,
                                        emotion_vars = emotions,
                                        predictors = predictors)

print(effect_table)


## Stigma Vars -----> 
stigma_vars <- c("ImmsMajSourceCrime", "PoliticiansTalkNegImm", "PoliciesImmUnfair", 
                 "LatinosMajSourceCrime", "PoliticiansTalkNegLatinos",
                 "PoliciesLatinosUnfair", "Stigma_Imm_Index", "Stigma_Latinos_Index",
                 "GroupDiscImms_Perc", "GroupDiscLatinos_Perc")

effect_table_stigma <- emotion_effect_analysis(data = both_pilots,
                                        emotion_vars = stigma_vars,
                                        predictors = predictors)
print(effect_table_stigma)
```

# Second Embedded Survey Experiment

Participation Versions:

1.  Voto Latino works to help individuals register to vote and cast ballots on time. Would you like to receive more information from them about voting and elections in your state?

2.  Voto Latino provides information on voter registration, casting ballots, and issues affecting the ${TermLatinoHispanic /ChoiceGroup/SelectedChoices} community.
    Would you like to receive more information from them about issues facing the${TermLatinoHispanic /ChoiceGroup/SelectedChoices} community in your state?

```{r}
ggplot(both_pilots, aes(x = ParticipationVersion, y = Participation_Response, 
                                          fill = ParticipationVersion)) +
  geom_boxplot(alpha = 0.6) +
  geom_jitter(width = 0.2, alpha = 0.3, color = "black") +
  coord_flip() +
  labs(title = "Want to Receive Pol. Information by Version", y = "Want to Receive More Information") +
  scale_fill_brewer(palette = "Set3") +
  theme_minimal() + theme(legend.position = "none")

summary(aov(Participation_Response ~ ParticipationVersion, data = both_pilots))
```

## Open-Ended Questions

Pilot 1 had all open ended questions. Pilot 2 only had the open-ended question on state belonging and follow-up on the participation question (no open-ended question on US belonging).

*For Belonging - the scale is 1 (not at all) to 10 (a lot):*

On Belonging (State):

```{r}

both_pilots$Belonging_Display <- glue(
  "Response for State Belonging (Rated {both_pilots$Belonging_State}):\n",
  "'{both_pilots$Belong_State_Open}'\n",
  "By {both_pilots$Age}-year-old {both_pilots$Sex} in {both_pilots$State}"
)

both_pilots$Belong_Display_wrapped <- sapply(both_pilots$Belonging_Display, function(txt) {
  paste(strwrap(txt, width = 80), collapse = "\n")
}, USE.NAMES = FALSE)

for (txt in both_pilots$Belong_Display_wrapped[1:5]) {
  cat(txt, "\n\n")
}

```

Belonging in the US (only Pilot 1 was shown this question):

```{r}
pilot1 <- pilot1 %>% mutate(
  Age = 2025 -Birth.Year 
)

pilot1$Belonging_Display_US <- glue(
  "Response for US Belonging (Rated {pilot1$Belonging_US}):\n",
  "'{pilot1$Belong_US_Open}'\n",
  "By {pilot1$Age}-year-old {pilot1$Sex} in {pilot1$State}"
)


pilot1$BelongUSDisplay_wrapped <- sapply(pilot1$Belonging_Display_US, function(txt) {
  paste(strwrap(txt, width = 80), collapse = "\n")
}, USE.NAMES = FALSE)

for (txt in pilot1$BelongUSDisplay_wrapped) {
  cat(txt, "\n\n")
}
```

# Whether they would like to be contacted by a civic organization (Voto Latino) -

Current thoughts: The "no cue" version should just say a civic organization (rather than name a specific one)

*Participation Response - 0 (No, would not like to be contacted) or 1 (Yes, would like to be contacted)*

```{r}

both_pilots$Participation_Display <- glue(
  "Response for wanting (or not wanting) more information ",
  "(Shown {both_pilots$ParticipationVers} & Chose {both_pilots$Participation_Response}):\n",
  "'{coalesce(both_pilots$Part_NoCue_Text, both_pilots$Part_LatinoCue_Text)}'\n",
  "By {both_pilots$Age}-year-old {both_pilots$Sex} in {both_pilots$State}"
)

both_pilots$Participation_Display_wrapped <- sapply(both_pilots$Participation_Display, function(txt) {
  paste(strwrap(txt, width = 80), collapse = "\n")
}, USE.NAMES = FALSE)

for (txt in both_pilots$Participation_Display_wrapped[1:5]) {
  cat(txt, "\n\n")
}
```

Thoughts on open-ended questions: people provided "real" answers, and for some, it seemed like that the questions were on topics that they wanted to discuss. The questions on belonging to me seemed to be produce more useful or thought-provoking answers that can shed light on that question of how immigration is affecting people psychologically. The participation question did get some good answers reflecting efficacy (worry about the community & wanting to do more or expressing hopelessness), but many were along the vein of "no, already have enough information" or "would like to seek that information on my own."


